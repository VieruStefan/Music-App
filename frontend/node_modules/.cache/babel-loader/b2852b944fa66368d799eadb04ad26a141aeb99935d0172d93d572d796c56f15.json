{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Documents/POS/frontend/src/Artist.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Artist extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: this.props.artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: String(this.props.artist.active)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this);\n  }\n}\nclass ArtistList extends Component {\n  // constructor(props){\n  //     super(props);\n  //     this.state = {\n  //         isLoaded: false,\n  //         artists: {\n  //             _embedded: {\n  //                 artistList:[]\n  //             },\n  //             _links:{\n  //                 self: {}\n  //             }\n  //         }\n  //     };\n  // }\n  // componentDidMount(){\n  //     fetch(\"/api/songcollection/artists\")\n  //     .then(res => res.json())\n  //     .then(\n  //         (result) => {\n  //             this.setState({\n  //                 isLoaded: true,\n  //                 artists: result\n  //             })\n  //         }\n  //     ) \n  // }\n  render() {\n    const artists = this.props.artistList.map(artist => /*#__PURE__*/_jsxDEV(Artist, {\n      artist: artist\n    }, artist._links.self.href, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this));\n    //const {isLoaded, artists} = this.state\n    //if(!isLoaded){\n    //    return <div>Loading...</div>\n    //}else{\n    return (\n      /*#__PURE__*/\n      // <ul>\n      // {artists._embedded.artistList.map(artist => (\n      //     <li key={artist.uuid}>\n      //     {artist.name} {String(artist.active)}\n      //     </li>\n      // ))}\n      // </ul>\n      _jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), artists]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    );\n    //}\n  }\n}\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artists: []\n    };\n  }\n  componentDidMount() {\n    fetch({\n      method: 'GET',\n      path: '/api/songcollection/artists'\n    }).done(response => {\n      this.setState({\n        artists: response.entity._embedded.artistList\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(ArtistList, {\n      artistList: this.state.artists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","Artist","render","props","artist","name","String","active","ArtistList","artists","artistList","map","_links","self","href","App","constructor","state","componentDidMount","fetch","method","path","done","response","setState","entity","_embedded"],"sources":["/home/stefan/Documents/POS/frontend/src/Artist.js"],"sourcesContent":["import { Component } from \"react\";\n\nclass Artist extends Component{\n\trender() {\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>{this.props.artist.name}</td>\n\t\t\t\t<td>{String(this.props.artist.active)}</td>\n\t\t\t</tr>\n\t\t)\n\t}\n}\n\nclass ArtistList extends Component{\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n    //         isLoaded: false,\n    //         artists: {\n    //             _embedded: {\n    //                 artistList:[]\n    //             },\n    //             _links:{\n    //                 self: {}\n    //             }\n    //         }\n    //     };\n    // }\n    // componentDidMount(){\n    //     fetch(\"/api/songcollection/artists\")\n    //     .then(res => res.json())\n    //     .then(\n    //         (result) => {\n    //             this.setState({\n    //                 isLoaded: true,\n    //                 artists: result\n    //             })\n    //         }\n    //     ) \n    // }\n    render(){\n        const artists = this.props.artistList.map(artist =>\n\t\t\t<Artist key={artist._links.self.href} artist={artist}/>\n        );\n        //const {isLoaded, artists} = this.state\n        //if(!isLoaded){\n        //    return <div>Loading...</div>\n        //}else{\n            return (\n            // <ul>\n            // {artists._embedded.artistList.map(artist => (\n            //     <li key={artist.uuid}>\n            //     {artist.name} {String(artist.active)}\n            //     </li>\n            // ))}\n            // </ul>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Description</th>\n                        </tr>\n                        {artists}\n                    </tbody>\n                </table>\n            )\n        //}\n\n        \n    }\n}\n\nexport default class App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {artists: []};\n\t}\n\n\tcomponentDidMount() {\n\t\t fetch ({method: 'GET', path: '/api/songcollection/artists'}).done(response => {\n\t\t\tthis.setState({artists: response.entity._embedded.artistList});\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ArtistList artistList={this.state.artists}/>\n\t\t)\n\t}\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,MAAM,SAASD,SAAS;EAC7BE,MAAM,GAAG;IACR,oBACC;MAAA,wBACC;QAAA,UAAK,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eACjC;QAAA,UAAKC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACC,MAAM,CAACG,MAAM;MAAC;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC;EAEP;AACD;AAEA,MAAMC,UAAU,SAASR,SAAS;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAE,MAAM,GAAE;IACJ,MAAMO,OAAO,GAAG,IAAI,CAACN,KAAK,CAACO,UAAU,CAACC,GAAG,CAACP,MAAM,iBACrD,QAAC,MAAM;MAA+B,MAAM,EAAEA;IAAO,GAAxCA,MAAM,CAACQ,MAAM,CAACC,IAAI,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAmB,CACjD;IACD;IACA;IACA;IACA;IACI;MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACI;QAAA,uBACI;UAAA,wBACI;YAAA,wBACI;cAAA,UAAI;YAAU;cAAA;cAAA;cAAA;YAAA,QAAK,eACnB;cAAA,UAAI;YAAS;cAAA;cAAA;cAAA;YAAA,QAAK,eAClB;cAAA,UAAI;YAAW;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QACnB,EACJL,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IACJ;IAEhB;EAGJ;AACJ;;AAEA,eAAe,MAAMM,GAAG,SAASf,SAAS,CAAC;EAE1CgB,WAAW,CAACb,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACc,KAAK,GAAG;MAACR,OAAO,EAAE;IAAE,CAAC;EAC3B;EAEAS,iBAAiB,GAAG;IAClBC,KAAK,CAAE;MAACC,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE;IAA6B,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MAC9E,IAAI,CAACC,QAAQ,CAAC;QAACf,OAAO,EAAEc,QAAQ,CAACE,MAAM,CAACC,SAAS,CAAChB;MAAU,CAAC,CAAC;IAC/D,CAAC,CAAC;EACH;EAEAR,MAAM,GAAG;IACR,oBACC,QAAC,UAAU;MAAC,UAAU,EAAE,IAAI,CAACe,KAAK,CAACR;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAE/C;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}